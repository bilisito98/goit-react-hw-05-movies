{"version":3,"file":"static/js/cast.3e9de1ce.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetailsPage/Cast/Cast.module.css?055e","components/MovieDetailsPage/Cast/Cast.jsx","services/movies-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__5fcZC\",\"item\":\"Cast_item__66r1U\",\"link\":\"Cast_link__OG02T\",\"name\":\"Cast_name__aLctn\",\"image_wrapper\":\"Cast_image_wrapper__U2rub\",\"image\":\"Cast_image__1PkfW\",\"name_wrapper\":\"Cast_name_wrapper__CcpQr\",\"character\":\"Cast_character__QND9j\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'services/movies-api';\nimport s from './Cast.module.css';\n\nexport default function Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        fetchMovieCredits(movieId)\n            .then(data => {\n                setCast(data.cast);\n            })\n    }, [movieId])\n\n    return <>\n        {cast &&\n            <ul className={s.cast}>\n                { cast.map(({ id, character, original_name, profile_path }) => (\n                    <li className={s.item} key={id}>\n                        <a className={s.link } href={`https://www.google.com/search?q=${original_name.split(' ').join('+')}`} target='_blank' rel=\"noreferrer\">\n                            <div className={s.image_wrapper}>{profile_path\n                                ? <img src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt={original_name} className={s.image} />\n                                : <img src='https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg' alt={original_name} className={s.image} />\n                            }</div>\n                            <div className={s.name_wrapper}>\n                                <p className={s.name}>{ original_name }</p>\n                                <p className={s.character}>{character}</p>\n                            </div>\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        }\n    </>\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=387a2500e741e87c896db50117c25d75'\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies(page=\"1\") {\n    const PATH_PARAMS = '/trending/movie/week';\n\n    // return fetch(`${BASE_URL}${PATH_PARAMS}${API_KEY}&page=${page}`)\n    //     .then(response => response.json())\n\n    return fetchWithErrorHandling(`${BASE_URL}${PATH_PARAMS}${API_KEY}&page=${page}`)\n}\n\nexport function fetchMovies(searchQuery, page = \"1\") {\n    const PATH_PARAMS = '/search/movie';\n    const searchParams = '&language=en-US&include_adult=false';\n\n    // return fetch(`${BASE_URL}${PATH_PARAMS}${API_KEY}&query=${searchQuery}&page=${page}${searchParams}`)\n    //     .then(response => response.json())\n\n    return fetchWithErrorHandling(`${BASE_URL}${PATH_PARAMS}${API_KEY}&query=${searchQuery}&page=${page}${searchParams}`)\n}\n\nexport function fetchMovieDetails(movie_id) {\n    const PATH_PARAMS = '/movie/';\n    const searchParams = '&language=en-US';\n\n    // return fetch(`${BASE_URL}${PATH_PARAMS}${movie_id}${API_KEY}${searchParams}`)\n    //     .then(response => response.json())\n\n    return fetchWithErrorHandling(`${BASE_URL}${PATH_PARAMS}${movie_id}${API_KEY}${searchParams}`)\n}\n\nexport function fetchMovieCredits(movie_id) {\n    const PATH_PARAMS = '/movie/';\n    const searchParams = '&language=en-US';\n\n    // return fetch(`${BASE_URL}${PATH_PARAMS}${movie_id}/credits${API_KEY}${searchParams}`)\n    //     .then(response => response.json())\n\n    return fetchWithErrorHandling(`${BASE_URL}${PATH_PARAMS}${movie_id}/credits${API_KEY}${searchParams}`)\n}\n\nexport function fetchMovieReviews(movie_id, page = \"1\") {\n    const PATH_PARAMS = '/movie/';\n    const searchParams = '&language=en-US';\n\n    // return fetch(`${BASE_URL}${PATH_PARAMS}${movie_id}/reviews${API_KEY}${searchParams}&page=${page}`)\n    //     .then(response => response.json())\n\n    return fetchWithErrorHandling(`${BASE_URL}${PATH_PARAMS}${movie_id}/reviews${API_KEY}${searchParams}&page=${page}`)\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCredits","then","data","className","s","map","id","character","original_name","profile_path","href","split","join","target","rel","src","alt","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","page","PATH_PARAMS","fetchMovies","searchQuery","searchParams","fetchMovieDetails","movie_id","fetchMovieReviews","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","error","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}